server:
  port: 6082
spring:
  application:
    name: resource-service
  config:
    import: "optional:configserver:http://config-server:8888"
  datasource:
    url: ${RESOURCE_SERVICE_SPRING_DATASOURCE_URL:jdbc:h2:mem:testdb}
    driverClassName: ${RESOURCE_SERVICE_SPRING_DATASOURCE_DRIVER_CLASS:org.h2.Driver}
    username: ${RESOURCE_SERVICE_SPRING_DATASOURCE_USERNAME:sa}
    password: ${RESOURCE_SERVICE_SPRING_DATASOURCE_PASSWORD:password}
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: ${RESOURCE_SERVICE_HIBERNATE_DIALECT:org.hibernate.dialect.H2Dialect}
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
  kafka:
    bootstrap-servers: kafka:9092
    producer:
      retries: 3
      properties:
        enable.idempotence: true
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      auto-offset-reset: latest
      enable-auto-commit: true
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    hostname: localhost
    prefer-ip-address: true

cloud:
  aws:
    credentials:
      accessKey: test
      secretKey: test
    region:
      static: us-east-1
    stack:
      auto: false #need to check if we really need it
    s3:
      endpoint: localstack:4566